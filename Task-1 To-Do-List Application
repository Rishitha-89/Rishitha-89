class Task:
    def __init__(self, task_id, description, due_date=None, status=False):
        self.id = task_id
        self.description = description
        self.due_date = due_date
        self.status = status

    def mark_completed(self):
        self.status = True

    def update_description(self, description):
        self.description = description

    def update_due_date(self, due_date):
        self.due_date = due_date
import json

class ToDoList:
    def __init__(self):
        self.tasks = []

    def add_task(self, task):
        self.tasks.append(task)

    def remove_task(self, task_id):
        self.tasks = [task for task in self.tasks if task.id != task_id]

    def update_task(self, task_id, description=None, due_date=None, status=None):
        for task in self.tasks:
            if task.id == task_id:
                if description:
                    task.update_description(description)
                if due_date:
                    task.update_due_date(due_date)
                if status is not None:
                    task.status = status

    def list_tasks(self):
        return self.tasks

    def save_to_file(self, filename):
        with open(filename, 'w') as f:
            json.dump([task.__dict__ for task in self.tasks], f)

    def load_from_file(self, filename):
        with open(filename, 'r') as f:
            tasks = json.load(f)
            self.tasks = [Task(**task) for task in tasks]
def main():
    todo_list = ToDoList()

    while True:
        print("1. Show tasks")
        print("2. Add task")
        print("3. Remove task")
        print("4. Update task")
        print("5. Mark task as completed")
        print("6. Save tasks")
        print("7. Load tasks")
        print("8. Exit")

        choice = input("Choose an option: ")

        if choice == '1':
            tasks = todo_list.list_tasks()
            for task in tasks:
                print(f"{task.id}. {task.description} (Due: {task.due_date}) - {'Completed' if task.status else 'Pending'}")
        elif choice == '2':
            task_id = input("Task ID: ")
            description = input("Description: ")
            due_date = input("Due Date: ")
            task = Task(task_id, description, due_date)
            todo_list.add_task(task)
        elif choice == '3':
            task_id = input("Task ID to remove: ")
            todo_list.remove_task(task_id)
        elif choice == '4':
            task_id = input("Task ID to update: ")
            description = input("New Description: ")
            due_date = input("New Due Date: ")
            status = input("Completed (yes/no): ").lower() == 'yes'
            todo_list.update_task(task_id, description, due_date, status)
        elif choice == '5':
            task_id = input("Task ID to mark as completed: ")
            todo_list.update_task(task_id, status=True)
        elif choice == '6':
            filename = input("Filename to save tasks: ")
            todo_list.save_to_file(filename)
        elif choice == '7':
            filename = input("Filename to load tasks: ")
            todo_list.load_from_file(filename)
        elif choice == '8':
            break

if __name__ == "__main__":
    main()
